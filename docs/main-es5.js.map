{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cliente-add-update/cliente-add-update.component.ts","webpack:///src/app/cliente-add-update/cliente-add-update.component.html","webpack:///src/app/data-inmemory.service.ts","webpack:///src/app/nav-bar/nav-bar.component.ts","webpack:///src/app/nav-bar/nav-bar.component.html","webpack:///src/app/table/table.component.ts","webpack:///src/app/table/table.component.html","webpack:///src/app/user-resumen/user-resumen.component.ts","webpack:///src/app/user-resumen/user-resumen.component.html","webpack:///src/app/usuario.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","encapsulation","None","AppModule","dataEncapsulation","declarations","providers","bootstrap","ClienteAddUpdateComponent","route","usuarioService","location","usuario","titulo","usuarios","updatedUser","snapshot","paramMap","get","getUsuario","subscribe","back","updateUsuario","addUsuario","save","goBack","DataInmemoryService","tipoUsuario","areas","estatus","cliente","elementoEstructura","numeroTrabajador","user","nombre","apellidoPaterno","apellidoMaterno","correoOficina","telefonoOficina","extensionOficina","movil1","movil2","telefonoCasa","fechaNacimiento","length","Math","max","map","providedIn","NavBarComponent","TableComponent","page","getUsuarios","totalUsuarios","window","confirm","filter","u","deleteUsuario","UserResumenComponent","setIdUsuario","x","getIdUsuario","UsuarioService","http","usuariosUrl","httpOptions","headers","pipe","handleError","url","_","console","log","put","post","newUsuario","operation","result","error","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {ClienteAddUpdateComponent} from './cliente-add-update/cliente-add-update.component';\nimport { TableComponent } from './table/table.component';\nimport { UserResumenComponent } from './user-resumen/user-resumen.component';\n\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/table', pathMatch:'full'},\n  {path: 'table', component: TableComponent},\n  {path: 'addupdate/:id' , component: ClienteAddUpdateComponent },\n  {path: 'addupdate', component: ClienteAddUpdateComponent},\n  {path: 'resumen/:id', component: UserResumenComponent},\n  {path: 'resumen', component: UserResumenComponent}\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n  title = 'user-registration';\n}\n","<app-nav-bar></app-nav-bar>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport {FormsModule} from '@angular/forms';\nimport {NgxPaginationModule} from 'ngx-pagination';\n\n\nimport {HttpClientInMemoryWebApiModule} from 'angular-in-memory-web-api';\nimport {DataInmemoryService} from './data-inmemory.service';\n\nimport { AppRoutingModule } from './app-routing.module';\n\n\nimport { AppComponent } from './app.component';\nimport { ClienteAddUpdateComponent } from './cliente-add-update/cliente-add-update.component';\nimport { TableComponent } from './table/table.component';\nimport { UserResumenComponent } from './user-resumen/user-resumen.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ClienteAddUpdateComponent,\n    TableComponent,\n    UserResumenComponent,\n    NavBarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    FormsModule,\n    HttpClientModule,\n    HttpClientInMemoryWebApiModule.forRoot(  //remover cuando se use un server real\n      DataInmemoryService, {dataEncapsulation: false} \n    ),\n    NoopAnimationsModule,\n    NgxPaginationModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { Modelo } from '../modelo';\nimport { UsuarioService } from '../usuario.service';\n\n@Component({\n  selector: 'app-cliente-add-update',\n  templateUrl: './cliente-add-update.component.html',\n  styleUrls: ['./cliente-add-update.component.css']\n})\nexport class ClienteAddUpdateComponent implements OnInit {\n  @Input() usuario: Modelo = {} as Modelo;\n  titulo: string = 'Add'; // Se define el titulo\n  id: number;\n  usuarios: Modelo[] = [];\n  updatedUser: boolean = true;\n\n\n  constructor(\n    private route: ActivatedRoute,\n    private usuarioService: UsuarioService,\n    private location: Location\n  ) {\n    this.id = +this.route.snapshot.paramMap.get('id'); // se obtiene el valor id de la url\n  }\n\n\n  ngOnInit(): void {\n    if(this.id > 0){\n      this.getUsuario();\n    }\n  }\n\n  getUsuario(): void {\n    this.usuarioService.getUsuario(this.id)\n      .subscribe(usuario => this.usuario = usuario);\n    this.titulo = 'Update'; // Se modifica el titulo\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  save(): void {\n    if (this.id > 0) {\n      this.usuarioService.updateUsuario(this.usuario)\n        .subscribe();\n    }\n    else {\n      this.usuarioService.addUsuario(this.usuario)\n        .subscribe();\n    }\n  }\n\n\n\n\n\n}\n","<div class=\" d-flex justify-content-center mr-5\">\n  <div class=\"container\">\n    <div class=\"jumbotron p-4 p-md-5 rounded-lg bg-white\">\n            <h1>{{titulo}} User</h1>\n        <form #formUsuarios=\"ngForm\" (ngSubmit)=\"save()\">\n            <div class=\"form-row separation\">\n                <h3 class=\"form-text text-muted\">&nbsp;&nbsp;&nbsp;<i class=\"fas fa-caret-right color\"></i>Enter the user's data in the corresponding fields.</h3>\n            </div>\n            <div class=\"form-row\">\n            <div class=\"col-md-4 mb-3\">\n                <label for=\"tipoUsuario\">User Type</label>\n                <select class=\"form-control\" id=\"tipoUsuario\" placeholder=\"Select\"\n                [(ngModel)]=\"usuario.tipoUsuario\" name=\"tipoUsuario\" required>\n                    <option disabled hidden selected>Select</option>\n                    <option>Type1</option>\n                    <option>Type2</option>\n                    <option>Type3</option>\n                </select>\n            </div>\n            <div class=\"col-md-4 mb-3\">\n                <label for=\"areas\">Areas</label>\n                <select class=\"form-control\" id=\"areas\" placeholder=\"Select\"\n                [(ngModel)]=\"usuario.areas\" name=\"areas\" required>\n                    <option disabled hidden selected>Select</option>\n                    <option>Area1</option>\n                    <option>Area2</option>\n                    <option>Area3</option>\n                </select>\n            </div>\n            <div class=\"col-md-4 mb-3\">\n                <label for=\"estatus\">Status</label>\n                <select class=\"form-control\" id=\"estatus\" placeholder=\"Activo\"\n                [(ngModel)]=\"usuario.estatus\" name=\"estatus\" required>\n                    <option disabled hidden selected>Select</option>\n                    <option>Active</option>\n                    <option>Inactive</option>\n                </select>\n            </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"col-md-4 mb-3\">\n                <label for=\"id\">User Id</label>\n                <input type=\"text\" class=\"form-control\" id=\"id\" maxlength=\"11\"\n                [(ngModel)]=\"usuario.id\" name=\"id\" disabled>\n                </div>\n                <div class=\"col-md-4 mb-3\">\n                    <label for=\"numeroTrabajador\">Employee Number</label>\n                    <input type=\"text\" class=\"form-control\" id=\"numeroTrabajador\" placeholder=\"Es el número de nómina\" maxlength=\"11\"\n                    [(ngModel)]=\"usuario.numeroTrabajador\" name=\"numeroTrabajador\" required\n                    minlength=\"11\" maxlength=\"11\" #numeroTrabajador = \"ngModel\"\n                    [class.is-invalid]=\"numeroTrabajador.invalid && (numeroTrabajador.dirty || numeroTrabajador.touched)\">\n                </div>\n                <div class=\"col-md-4 mb-3\">\n                    <label for=\"usuario\">User</label>\n                    <input type=\"text\" class=\"form-control\" id=\"usuario\" maxlength=\"100\"\n                    [(ngModel)]=\"usuario.user\" name=\"usuario\" required>\n                </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"col-md-4 mb-3\">\n                    <label for=\"cliente\">Customer</label>\n                    <select class=\"form-control\" id=\"cliente\" placeholder=\"Select\"\n                    [(ngModel)]=\"usuario.cliente\" name=\"cliente\" required>\n                        <option disabled hidden selected>Select</option>\n                        <option>Customer1</option>\n                        <option>Customer2</option>\n                        <option>Customer3</option>\n                    </select>\n                </div>\n                <div class=\"col-md-4 mb-3\">\n                    <label for=\"elementoEstructura\">Element</label>\n                    <select class=\"form-control\" id=\"elementoEstructura\" placeholder=\"Select\"\n                    [(ngModel)]=\"usuario.elementoEstructura\" name=\"elementoEstructura\" required>\n                        <option disabled hidden selected>Select</option>\n                        <option>Element1</option>\n                        <option>Element2</option>\n                        <option>Element3</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"form-row separation\">\n                <h3 class=\"form-text text-muted\">Personal info</h3>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"col-md-4 mb-3\">\n                <label for=\"nombres\">First Name</label>\n                <input type=\"text\" class=\"form-control\" maxlength=\"50\" id=\"nombres\"\n                [(ngModel)]=\"usuario.nombre\" name=\"nombre\" required>\n                </div>\n                <div class=\"col-md-4 mb-3\">\n                    <label for=\"apellidoPaterno\">Middle Name</label>\n                    <input type=\"text\" class=\"form-control\" maxlength=\"25\" id=\"apellidoPaterno\"\n                    [(ngModel)]=\"usuario.apellidoPaterno\" name=\"apellidoPaterno\" required>\n                </div>\n                <div class=\"col-md-4 mb-3\">\n                    <label for=\"apellidoMaterno\">Last Name</label>\n                    <input type=\"text\" class=\"form-control\" maxlength=\"25\" id=\"apellidoMaterno\"\n                    [(ngModel)]=\"usuario.apellidoMaterno\" name=\"apellidoMaterno\">\n                </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"col-md-4 mb-3\">\n                <label for=\"nombres\">First Email</label>\n                <input type=\"email\" placeholder=\"correo@dominio.com\" class=\"form-control\" maxlength=\"25\" id=\"nombres\"\n                [(ngModel)]=\"usuario.correoOficina\" name=\"correoOficina\" required>\n                </div>\n                <div class=\"col-md-4 mb-3\">\n                    <label for=\"telefonoOficina\">Telephone</label>\n                    <input type=\"text\" class=\"form-control\" id=\"telefonoOficina\" maxlength=\"50\"\n                    [(ngModel)]=\"usuario.telefonoOficina\" name=\"telefonoOficina\">\n                </div>\n                <div class=\"col-md-4 mb-3\">\n                    <label for=\"extensionOficina\">Office Extension</label>\n                    <input type=\"number\" class=\"form-control\" id=\"extensionOficina\" maxlength=\"5\"\n                    [(ngModel)]=\"usuario.extensionOficina\" name=\"extensionOficina\">\n                </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"col-md-4 mb-3\">\n                <label for=\"movil1\">Mobile 1</label>\n                <input type=\"email\"  class=\"form-control\" id=\"movil1\" maxlength=\"50\"\n                [(ngModel)]=\"usuario.movil1\" name=\"movil1\">\n                </div>\n                <div class=\"col-md-4 mb-3\">\n                    <label for=\"movil2\">Mobile 2</label>\n                    <input type=\"email\" placeholder=\"Opcional\" class=\"form-control\" id=\"movil2\" maxlength=\"50\"\n                    [(ngModel)]=\"usuario.movil2\" name=\"movil2\">\n                </div>\n                <div class=\"col-md-4 mb-3\">\n                    <label for=\"telefonoCasa\">Telephone 2</label>\n                    <input type=\"email\" placeholder=\"Opcional\" class=\"form-control\" id=\"telefonoCasa\" maxlength=\"50\"\n                    [(ngModel)]=\"usuario.telefonoCasa\" name=\"telefonoCasa\">\n                </div>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"col-md-4 mb-3\">\n                    <label for=\"fecha\">Date of birth</label>\n                    <input type=\"date\" class=\"form-control\" id=\"fecha\"\n                    [(ngModel)]=\"usuario.fechaNacimiento\" name=\"fechaNacimiento\" required>\n                </div>\n            </div>\n            <div *ngIf=\"numeroTrabajador.invalid && (numeroTrabajador.dirty || numeroTrabajador.touched)\">\n                <div class=\"alert alert-danger\">Employee Number must be 11 characters long.</div>\n            </div>\n            <div *ngIf=\"formUsuarios.form.invalid\">\n                <div *ngIf=\"numeroTrabajador.valid || numeroTrabajador.pristine\" class=\"alert alert-dark\">Please fill in the required fields correctly.</div>\n            </div>\n            <div class=\"form-row justify-content-center\">\n                <button class=\"btn btn-secondary m-2\" type=\"button\" (click)=\"goBack()\">Cancel</button>\n                <button class=\"btn m-2 btn-color\" type=\"submit\" (click)=\"save()\" [disabled]=\"formUsuarios.form.invalid\" routerLink=\"/resumen/{{usuario.id}}\">Save</button>\n            </div>\n        </form>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {DataSource} from '@angular/cdk/collections';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {Modelo} from './modelo';\nimport {InMemoryDbService} from 'angular-in-memory-web-api';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class DataInmemoryService implements InMemoryDbService{\n\n  createDb(){\n    const usuarios = [\n     {id:100,\n      tipoUsuario: 'Type1',\n      areas: 'Area1',\n      estatus: 'Active',\n      cliente: 'Customer1',\n      elementoEstructura: 'Element1',\n      numeroTrabajador: '150034A354B',\n      user: 'Jose',\n      nombre: 'Jose',\n      apellidoPaterno: 'Juarez',\n      apellidoMaterno: 'Flores',\n      correoOficina: 'jose@prueba.com',\n      telefonoOficina: '8116723392',\n      extensionOficina: '52',\n      movil1: '8116723393',\n      movil2: '8116723394',\n      telefonoCasa: '8116723395',\n      fechaNacimiento: '1987-11-11'},\n      {id:101,\n        tipoUsuario: 'Type2',\n        areas: 'Area1',\n        estatus: 'Active',\n        cliente: 'Customer1',\n        elementoEstructura: 'Element1',\n        numeroTrabajador: '184534A354B',\n        user: 'Mark',\n        nombre: 'Mark ',\n        apellidoPaterno: 'Torres',\n        apellidoMaterno: 'Rodriguez',\n        correoOficina: 'jose@prueba.com',\n        telefonoOficina: '8116723392',\n        extensionOficina: '52',\n        movil1: '8116723393',\n        movil2: '8116723394',\n        telefonoCasa: '8116723395',\n        fechaNacimiento: '1987-11-11'},\n        {id:102,\n          tipoUsuario: 'Type1',\n          areas: 'Area1',\n          estatus: 'Active',\n          cliente: 'Customer1',\n          elementoEstructura: 'Element1',\n          numeroTrabajador: '198034A354H',\n          user: 'Greg',\n          nombre: 'Greg',\n          apellidoPaterno: 'Fernandez',\n          apellidoMaterno: 'Martin',\n          correoOficina: 'jose@prueba.com',\n          telefonoOficina: '8116723392',\n          extensionOficina: '52',\n          movil1: '8116723393',\n          movil2: '8116723394',\n          telefonoCasa: '8116723395',\n          fechaNacimiento: '1987-11-11'},\n          {id:103,\n            tipoUsuario: 'Type1',\n            areas: 'Area1',\n            estatus: 'Active',\n            cliente: 'Customer1',\n            elementoEstructura: 'Element1',\n            numeroTrabajador: '340034A354B',\n            user: 'Robert',\n            nombre: 'Robert',\n            apellidoPaterno: 'Estrella',\n            apellidoMaterno: 'Martin',\n            correoOficina: 'jose@prueba.com',\n            telefonoOficina: '8116723392',\n            extensionOficina: '52',\n            movil1: '8116723393',\n            movil2: '8116723394',\n            telefonoCasa: '8116723395',\n            fechaNacimiento: '1987-11-11'},\n            {id:104,\n            tipoUsuario: 'Type1',\n            areas: 'Area1',\n            estatus: 'Active',\n            cliente: 'Customer1',\n            elementoEstructura: 'Element1',\n            numeroTrabajador: '1150034A35F',\n            user: 'Roberto',\n            nombre: 'Roberto',\n            apellidoPaterno: 'Escobar',\n            apellidoMaterno: 'Puentes',\n            correoOficina: 'jose@prueba.com',\n            telefonoOficina: '8116723392',\n            extensionOficina: '52',\n            movil1: '8116723393',\n            movil2: '8116723394',\n            telefonoCasa: '8116723395',\n            fechaNacimiento: '1987-11-11'},\n            {id:105,\n              tipoUsuario: 'Type1',\n              areas: 'Area1',\n              estatus: 'Active',\n              cliente: 'Customer1',\n              elementoEstructura: 'Element1',\n              numeroTrabajador: '150034A354B',\n              user: 'Alberto',\n              nombre: 'Alberto',\n              apellidoPaterno: 'Silva',\n              apellidoMaterno: 'Puentes',\n              correoOficina: 'jose@prueba.com',\n              telefonoOficina: '8116723392',\n              extensionOficina: '52',\n              movil1: '8116723393',\n              movil2: '8116723394',\n              telefonoCasa: '8116723395',\n              fechaNacimiento: '1987-11-11'}\n\n    ];\n    return {usuarios};\n  }\n\n  genId(usuarios: Modelo[]): number{\n    return usuarios.length > 0 ? Math.max(...usuarios.map(usuarios => usuarios.id)) + 1 : 100;\n  }\n\n}\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"header ml-2\">\n  <nav class=\"navbar navbar-expand-md first\">\n      <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n        <ul class=\"navbar-nav mr-auto\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link big-text white\" href=\"#\"> <i class=\"fas fa-home\"></i> Home</a>\n          </li>\n          <li class=\"nav-item \">\n            <a class=\"nav-link big-text white\" href=\"#\"><i class=\"fas fa-bell\"></i> Notifications</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" >10052-998-8800</a>\n          </li>\n        </ul>\n        <ul  class=\"navbar-nav mt-2 mt-md-0\">\n          <li class=\"nav-item \">\n            <a class=\"nav-link big-text white \" href=\"#\"><i class=\"fas fa-cog\"></i> Configuration</a>\n          </li>\n          <li class=\"nav-item \">\n            <a class=\"nav-link big-text white\" href=\"#\"><i class=\"fas fa-power-off\"></i> Exit</a>\n          </li>\n        </ul>\n      </div>\n  </nav>\n  <div class=\"container\">\n        <nav class=\"rounded-left rounded-right rounded-bottom shadow navbar navbar-expand-md second\">\n            <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n            <ul class=\"navbar-nav mr-auto\">\n                <li class=\"nav-item\">\n                    <div class=\"ml-4\"><img class=\"headerLogos\" src=\"assets/img/logo.png\" alt=\"Logo de Odessa\" ></div>\n                </li>\n            </ul>\n            <ul  class=\"navbar-nav mt-2 mt-md-0\">\n                <li class=\"nav-item \">\n                  <a class=\"nav-link big-text gray\" href=\"#\" routerLink=\"/table\"><i class=\"fas fa-users fa-2x\"></i><br>Users</a>\n                </li>\n                <li class=\"nav-item \">\n                  <a class=\"nav-link big-text gray\" href=\"#\"><i class=\"fas fa-layer-group fa-2x\"></i><br>Relations</a>\n                </li>\n                <li class=\"nav-item \">\n                  <a class=\"nav-link big-text gray\" href=\"#\"><i class=\"fas fa-id-badge fa-2x\"></i><br>Profiles</a>\n                </li>\n                <li class=\"nav-item \">\n                  <a class=\"nav-link big-text gray\" href=\"#\"><i class=\"fas fa-book-open fa-2x\"></i><br>Catalogs</a>\n                </li>\n                <li class=\"nav-item \">\n                    <a class=\"nav-link big-text gray\" href=\"#\"><i class=\"fas fa-folder fa-2x\"></i><br>System<br>Elements</a>\n                </li>\n            </ul>\n            </div>\n        </nav>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild} from '@angular/core';\nimport {Modelo} from '../modelo';\nimport {UsuarioService} from '../usuario.service';\n\n@Component({\n  selector: 'app-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.css'],\n})\nexport class TableComponent implements OnInit {\n\n  usuarios: Modelo[] = [];\n  totalUsuarios: number;\n  page = 1;\n\n  constructor(private usuarioService: UsuarioService) {\n\n\n  }\n\n  ngOnInit(): void {\n    this.getUsuarios();\n  }\n\n  getUsuarios(): void{\n    this.usuarioService.getUsuarios()\n    .subscribe(usuarios => {\n      this.usuarios = usuarios\n      this.totalUsuarios = usuarios.length\n    });\n  }\n\n  //Eliminar un usuario\n  delete(usuario: Modelo):void{\n    if(window.confirm(\"You are about to delete this record, this action is irreversible\"))\n    {\n    this.usuarios = this.usuarios.filter(u => u !== usuario);\n    this.usuarioService.deleteUsuario(usuario).subscribe();\n    }\n  }\n\n\n\n}\n","<div class=\" d-flex justify-content-center mr-5\">\n  <div class=\"container\">\n      <div class=\"jumbotron p-4 p-md-5 rounded-lg bg-white shadow\">\n       <h1 class=\"separation\">Edit an existing user</h1>\n       <h3 class=\"form-text text-muted\">&nbsp;&nbsp;&nbsp;<i class=\"fas fa-caret-right color\"></i>Click  <i class=\"fas fa-pencil-alt\"></i> to edit, click <i class=\"far fa-trash-alt i color\"></i> to delete or click  <i class=\"fas fa-user-plus\"></i> to add a user.</h3>\n       <div class=\"table-responsive\">\n          <table class=\"table table-striped  color\">\n              <thead class=\"table-sm table-bordered\">\n                  <tr class=\"orange\">\n                      <th colspan=\"6\" >Usuarios</th>\n                      <th scope=\"col\" class=\"centeri\">\n                          <i class=\"fas fa-search\"></i>\n                      </th>\n                      <th scope=\"col\" class=\"centeri\" routerLink=\"/addupdate\">\n                          <i class=\"fas fa-user-plus\"></i>\n                      </th>\n                  </tr>\n                  <tr class=\"gray\">\n                      <th scope=\"col\">Employee Number</th>\n                      <th scope=\"col\">First Name</th>\n                      <th scope=\"col\">Middle Name</th>\n                      <th scope=\"col\">Last Name</th>\n                      <th scope=\"col\">User Type</th>\n                      <th scope=\"col\">Status</th>\n                      <th scope=\"col\" colspan=\"2\"></th>\n                  </tr>\n              </thead>\n\n              <tbody>\n                  <tr *ngFor = \"let usuario of usuarios | paginate: {id: 'pagination',\n              itemsPerPage: 4, currentPage: page, totalItems:totalUsuarios}\">\n                      <td scoper=\"row\">{{usuario.numeroTrabajador}}</td>\n                      <td>{{usuario.nombre}}</td>\n                      <td>{{usuario.apellidoPaterno}}</td>\n                      <td>{{usuario.apellidoMaterno}}</td>\n                      <td>{{usuario.tipoUsuario}}</td>\n                      <td>{{usuario.estatus}}</td>\n                      <td class=\"centeri\" routerLink=\"/addupdate/{{usuario.id}}\">\n                          <i class=\"fas fa-pencil-alt\"></i>\n                      </td>\n                      <td class=\"centeri\" (click)=\"delete(usuario)\">\n                          <i class=\"far fa-trash-alt i color\"></i>\n                      </td>\n                  </tr>\n              </tbody>\n          </table>\n          <div class=\"separation\">\n              <pagination-controls class=\"paginator\" id=\"pagination\" maxSize=\"2\" directionLinks=\"true\" previousLabel=\"Previous\" nextLabel=\"Next\" (pageChange)=\"page = $event\"></pagination-controls>\n          </div>\n          <div class=\"separation\"></div>\n      </div>\n      </div>\n</div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router'\nimport {Modelo} from '../modelo';\nimport {UsuarioService} from '../usuario.service';\n\n@Component({\n  selector: 'app-user-resumen',\n  templateUrl: './user-resumen.component.html',\n  styleUrls: ['./user-resumen.component.css']\n})\nexport class UserResumenComponent implements OnInit {\n @Input()usuario : Modelo = {} as Modelo;\n  id : number = 0;\n\n  constructor(\n    private route: ActivatedRoute,\n    private usuarioService: UsuarioService\n  ) {\n      this.id = +this.route.snapshot.paramMap.get('id');\n    }\n\n  ngOnInit(): void { \n    if(this.id > 0) \n      this.getUsuario();\n    else{\n      this.setIdUsuario();\n    }\n  }\n\n\n  getUsuario(): void{\n    this.usuarioService.getUsuario(this.id)\n    .subscribe(usuario => this.usuario = usuario);\n  }\n\n  setIdUsuario(): void { //Crea el id para usuarios nuevos, ya que no lo puede obtener de la URL\n    this.id = +this.usuarioService.getUsuarios().subscribe( x => {\n        this.getIdUsuario(x);\n    });\n  }\n\n  getIdUsuario(usuarios : Modelo[]): void{\n    this.id = usuarios.length + 99;\n    this.getUsuario();\n  }\n\n\n}\n","<div class=\" d-flex justify-content-center mr-5\">\n  <div class=\"container\">\n    <div class=\"jumbotron p-4 p-md-5 rounded-lg bg-white\">\n        <h1>User {{usuario.nombre}}</h1>\n        <form>\n            <div class=\"form-row separation\">\n                <h3 class=\"form-text text-muted\">The user has been updated successfully.</h3>\n            </div>\n            <div class=\"form-row\">\n                <div class=\"col-md-4 mb-3\">\n                    <label for=\"id\">Employee Number</label>\n                    <input type=\"text\" class=\"form-control\" id=\"id\" [(ngModel)]=\"usuario.id\"\n                    name=\"id\" disabled>\n                </div>\n                <div class=\"col-md-4 mb-3\">\n                    <label for=\"tipoUsuario\">User Type</label>\n                    <input class=\"form-control\" id=\"tipoUsuario\" [(ngModel)]=\"usuario.tipoUsuario\"\n                    name=\"tipoUsuario\" disabled>\n                </div>\n                <div class=\"col-md-4 mb-3\">\n                    <label for=\"estatus\">Status</label>\n                    <input class=\"form-control\" id=\"estatus\" [(ngModel)]=\"usuario.estatus\"\n                    name=\"estatus\" disabled>\n                </div>\n\n            </div>\n            <div class=\"form-row\">\n                <div class=\"col-md-4 mb-3\">\n                    <label for=\"nombres\">Name</label>\n                    <input type=\"text\" class=\"form-control\" id=\"nombres\" [(ngModel)]=\"usuario.nombre\"\n                    name=\"nombre\" disabled>\n                </div>\n                <div class=\"col-md-4 mb-3\">\n                    <label for=\"cliente\">Customer</label>\n                    <input class=\"form-control\" id=\"cliente\" [(ngModel)]=\"usuario.cliente\"\n                    name=\"cliente\" disabled>\n                </div>\n                <div class=\"col-md-4 mb-3\">\n                    <label for=\"elementoEstructura\">Element</label>\n                    <input class=\"form-control\" id=\"elementoEstructura\" [(ngModel)]=\"usuario.elementoEstructura\"\n                    name=\"elementoEstructura\" disabled>\n                </div>\n            </div>\n            <div class=\"form-row separation\">\n                <h3 class=\"form-text text-muted\">What to do next?</h3>\n            </div>\n                <h4 class=\"form-text text-muted\">&nbsp;&nbsp;&nbsp;<i class=\"fas fa-caret-right color\"></i> Select one of the options</h4>\n        </form>\n\n        <div>\n            <div class=\"row centrar\">\n            <div class=\"col-lg-3\">\n                <i class=\"fas fa-user-plus fa-4x\" routerLink=\"/addupdate\"></i>\n                <h3>Register a <br>new user</h3>\n                <p>Create a new user.Here you enter data and assign access profiles and information.</p>\n            </div>\n            <div class=\"col-lg-3\">\n                <i class=\"fas fa-user-edit fa-4x\" routerLink=\"/table\"></i>\n                <h3>Edit an existing<br>user</h3>\n                <p>Modify existing users Here you can consult, modify, activate, deactivate or delete users.</p>\n            </div>\n            <div class=\"col-lg-3\">\n                <i class=\"fas fa-sticky-note fa-4x\"></i>\n                <h3>Assign profiles <br>to a user</h3>\n                <p>Create or update the administrator user record.</p>\n            </div>\n            <div class=\"col-lg-3\">\n                <i class=\"fas fa-users fa-4x\"></i>\n                <h3>Mass Upload of<br>users</h3>\n                <p>Here you upload an Excel file with the users you want to create.</p>\n            </div>\n            </div>\n        </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {Modelo} from './modelo';\nimport {Observable, of} from 'rxjs';\nimport {catchError, map, tap} from 'rxjs/operators';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n  private usuariosUrl = 'api/usuarios';\n\n  httpOptions = {\n    headers: new HttpHeaders({'Content-Type': 'aplication/json'})\n  };\n  constructor(private http: HttpClient) { }\n\n\n\n  //Se obtinen los usuarios desde el server\n  getUsuarios(): Observable<Modelo[]>{\n    return this.http.get<Modelo[]>(this.usuariosUrl)\n    .pipe(\n      catchError(this.handleError<Modelo[]>('getUsuarios', []))\n    );\n  }\n\n\n\n  getUsuario(id: number): Observable<Modelo>{\n    const url = `${this.usuariosUrl}/${id}`;\n    return this.http.get<Modelo>(url).pipe(\n      tap(_ => console.log(`fetched Usuario id=${id}`)),\n      catchError(this.handleError<Modelo>(`getUsuario id=${id}`))\n    );\n  }\n\n  //Actualizar Usuario\n  updateUsuario(usuario: Modelo): Observable<any>{\n    return this.http.put(this.usuariosUrl,usuario,this.httpOptions).pipe(\n      tap(_=> console.log(`actualizado usuario id=${usuario.id}`)),\n      catchError(this.handleError<any>('update'))\n    );\n  }\n\n  //Añadir Usuario\n  addUsuario(usuario: Modelo): Observable<any>{\n    return this.http.post<Modelo>(this.usuariosUrl, usuario, this.httpOptions)\n    .pipe(\n      tap((newUsuario: Modelo) => console.log(`add new usuario id = ${usuario.id}`)),\n      catchError(this.handleError<Modelo>('addUsuario'))\n    )\n  }\n\n  //Eliminar Usuario\n  deleteUsuario(usuario: Modelo | number): Observable<any>{\n    const id = typeof usuario === 'number' ? usuario : usuario.id;\n    const url = `${this.usuariosUrl}/${id}`;\n    return this.http.delete<Modelo>(url, this.httpOptions).pipe(\n      tap(_ => console.log(`Eleminado Usuario id=${id}`)),\n      catchError(this.handleError<Modelo>('deleteUsuario'))\n    );\n  }\n\n\n\n  private handleError<T>(operation = 'operation', result?: T){\n    return (error: any): Observable<T> => {\n      console.error(error);\n      return of(result as T);\n    };\n  }\n\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}